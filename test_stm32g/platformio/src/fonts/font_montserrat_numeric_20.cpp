#include "lvgl.h"

/*******************************************************************************
 * Size: 22 px
 * Bpp: 4
 * Opts: 
 ******************************************************************************/

#ifndef FONT_MONTSERRAT_NUMERIC_20
#define FONT_MONTSERRAT_NUMERIC_20 1
#endif

#if FONT_MONTSERRAT_NUMERIC_20

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {
    /* U+2B "+" */
    0x0, 0x0, 0x48, 0x20, 0x0, 0x0, 0x0, 0x8,
    0xf5, 0x0, 0x0, 0x0, 0x0, 0x8f, 0x50, 0x0,
    0x0, 0x0, 0x8, 0xf5, 0x0, 0x0, 0x49, 0x99,
    0xcf, 0xb9, 0x99, 0x28, 0xff, 0xff, 0xff, 0xff,
    0xf5, 0x13, 0x33, 0x9f, 0x73, 0x33, 0x0, 0x0,
    0x8, 0xf5, 0x0, 0x0, 0x0, 0x0, 0x8f, 0x50,
    0x0, 0x0, 0x0, 0x8, 0xf5, 0x0, 0x0, 0x0,
    0x0, 0x12, 0x0, 0x0, 0x0,

    /* U+2C "," */
    0x6d, 0x6e, 0xfe, 0x8f, 0xc2, 0xf7, 0x6f, 0x2a,
    0xc0, 0x32, 0x0,

    /* U+2D "-" */
    0xbf, 0xff, 0xff, 0x2a, 0xee, 0xee, 0xe2,

    /* U+2E "." */
    0x6d, 0x6e, 0xfe, 0xaf, 0x90, 0x10,

    /* U+30 "0" */
    0x0, 0x0, 0x4, 0x78, 0x61, 0x0, 0x0, 0x0,
    0x3, 0xdf, 0xff, 0xff, 0x90, 0x0, 0x0, 0x3f,
    0xfd, 0x76, 0x9f, 0xfb, 0x0, 0x0, 0xdf, 0xa0,
    0x0, 0x3, 0xff, 0x60, 0x5, 0xfe, 0x0, 0x0,
    0x0, 0x6f, 0xd0, 0xa, 0xf8, 0x0, 0x0, 0x0,
    0xf, 0xf2, 0xd, 0xf5, 0x0, 0x0, 0x0, 0xc,
    0xf6, 0xf, 0xf3, 0x0, 0x0, 0x0, 0xa, 0xf7,
    0xf, 0xf2, 0x0, 0x0, 0x0, 0xa, 0xf8, 0xe,
    0xf3, 0x0, 0x0, 0x0, 0xb, 0xf7, 0xd, 0xf6,
    0x0, 0x0, 0x0, 0xd, 0xf5, 0x8, 0xfa, 0x0,
    0x0, 0x0, 0x2f, 0xf1, 0x3, 0xff, 0x30, 0x0,
    0x0, 0xaf, 0xb0, 0x0, 0xaf, 0xe3, 0x0, 0x9,
    0xff, 0x20, 0x0, 0xc, 0xff, 0xed, 0xff, 0xf5,
    0x0, 0x0, 0x0, 0x7e, 0xff, 0xfb, 0x30, 0x0,
    0x0, 0x0, 0x0, 0x12, 0x0, 0x0, 0x0,

    /* U+31 "1" */
    0x36, 0x66, 0x66, 0x9, 0xff, 0xff, 0xf1, 0x48,
    0x88, 0xff, 0x10, 0x0, 0x1f, 0xf1, 0x0, 0x1,
    0xff, 0x10, 0x0, 0x1f, 0xf1, 0x0, 0x1, 0xff,
    0x10, 0x0, 0x1f, 0xf1, 0x0, 0x1, 0xff, 0x10,
    0x0, 0x1f, 0xf1, 0x0, 0x1, 0xff, 0x10, 0x0,
    0x1f, 0xf1, 0x0, 0x1, 0xff, 0x10, 0x0, 0x1f,
    0xf1, 0x0, 0x1, 0xff, 0x10, 0x0, 0x1f, 0xf1,

    /* U+32 "2" */
    0x0, 0x2, 0x68, 0x87, 0x30, 0x0, 0x0, 0x3c,
    0xff, 0xff, 0xff, 0xb1, 0x0, 0x3f, 0xfd, 0x86,
    0x7a, 0xff, 0xb0, 0x0, 0xa8, 0x0, 0x0, 0x5,
    0xff, 0x30, 0x0, 0x0, 0x0, 0x0, 0xe, 0xf5,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xef, 0x40, 0x0,
    0x0, 0x0, 0x0, 0x3f, 0xf1, 0x0, 0x0, 0x0,
    0x0, 0xd, 0xf8, 0x0, 0x0, 0x0, 0x0, 0xc,
    0xfc, 0x0, 0x0, 0x0, 0x0, 0xc, 0xfd, 0x10,
    0x0, 0x0, 0x0, 0x1c, 0xfc, 0x10, 0x0, 0x0,
    0x0, 0x1d, 0xfc, 0x0, 0x0, 0x0, 0x0, 0x1d,
    0xfb, 0x0, 0x0, 0x0, 0x0, 0x1d, 0xfb, 0x0,
    0x0, 0x0, 0x0, 0xe, 0xff, 0xee, 0xee, 0xee,
    0xee, 0x0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,

    /* U+33 "3" */
    0x5, 0x66, 0x66, 0x66, 0x66, 0x62, 0xc, 0xff,
    0xff, 0xff, 0xff, 0xf6, 0x6, 0x88, 0x88, 0x88,
    0xcf, 0xe2, 0x0, 0x0, 0x0, 0x3, 0xff, 0x40,
    0x0, 0x0, 0x0, 0x1e, 0xf7, 0x0, 0x0, 0x0,
    0x0, 0xcf, 0x90, 0x0, 0x0, 0x0, 0x9, 0xfc,
    0x0, 0x0, 0x0, 0x0, 0x3f, 0xfe, 0xb6, 0x0,
    0x0, 0x0, 0x3d, 0xdf, 0xff, 0xc0, 0x0, 0x0,
    0x0, 0x0, 0x5f, 0xf8, 0x0, 0x0, 0x0, 0x0,
    0x7, 0xfe, 0x0, 0x0, 0x0, 0x0, 0x4, 0xff,
    0x2, 0x0, 0x0, 0x0, 0x7, 0xfd, 0x1e, 0xc4,
    0x0, 0x0, 0x5f, 0xf7, 0x3e, 0xff, 0xfd, 0xdf,
    0xff, 0xc0, 0x1, 0x7c, 0xff, 0xff, 0xd7, 0x0,
    0x0, 0x0, 0x1, 0x20, 0x0, 0x0,

    /* U+34 "4" */
    0x0, 0x0, 0x0, 0x0, 0x56, 0x30, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x6f, 0xe1, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x3f, 0xf3, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x1e, 0xf7, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xb, 0xfa, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8,
    0xfd, 0x0, 0x0, 0x0, 0x0, 0x0, 0x4, 0xff,
    0x20, 0x0, 0x0, 0x0, 0x0, 0x2, 0xff, 0x50,
    0x0, 0xff, 0x20, 0x0, 0x0, 0xdf, 0x90, 0x0,
    0xf, 0xf2, 0x0, 0x0, 0xaf, 0xc0, 0x0, 0x0,
    0xff, 0x20, 0x0, 0x6f, 0xfc, 0xaa, 0xaa, 0xaf,
    0xfb, 0xaa, 0x9, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xf1, 0x13, 0x33, 0x33, 0x33, 0x3f, 0xf5,
    0x33, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x20,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xf, 0xf2, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x20, 0x0,

    /* U+35 "5" */
    0x0, 0x36, 0x66, 0x66, 0x66, 0x60, 0x0, 0xaf,
    0xff, 0xff, 0xff, 0xf2, 0x0, 0xbf, 0xa8, 0x88,
    0x88, 0x81, 0x0, 0xdf, 0x30, 0x0, 0x0, 0x0,
    0x0, 0xff, 0x10, 0x0, 0x0, 0x0, 0x0, 0xff,
    0x0, 0x0, 0x0, 0x0, 0x2, 0xff, 0x44, 0x31,
    0x0, 0x0, 0x3, 0xff, 0xff, 0xff, 0xe8, 0x10,
    0x3, 0xaa, 0xaa, 0xbe, 0xff, 0xd1, 0x0, 0x0,
    0x0, 0x0, 0x4e, 0xf9, 0x0, 0x0, 0x0, 0x0,
    0x6, 0xfe, 0x0, 0x0, 0x0, 0x0, 0x3, 0xff,
    0x2, 0x0, 0x0, 0x0, 0x7, 0xfd, 0x1e, 0xc4,
    0x0, 0x0, 0x5f, 0xf7, 0x3e, 0xff, 0xfd, 0xdf,
    0xff, 0xc0, 0x1, 0x7c, 0xff, 0xff, 0xd7, 0x0,
    0x0, 0x0, 0x1, 0x20, 0x0, 0x0,

    /* U+36 "6" */
    0x0, 0x0, 0x4, 0x78, 0x75, 0x10, 0x0, 0x0,
    0x6e, 0xff, 0xff, 0xff, 0x30, 0x0, 0x9f, 0xfb,
    0x65, 0x69, 0xc0, 0x0, 0x6f, 0xf4, 0x0, 0x0,
    0x0, 0x0, 0xe, 0xf5, 0x0, 0x0, 0x0, 0x0,
    0x4, 0xfe, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8f,
    0xa0, 0x2, 0x44, 0x20, 0x0, 0x9, 0xf8, 0x4d,
    0xff, 0xff, 0xc3, 0x0, 0xaf, 0xcf, 0xe9, 0x79,
    0xdf, 0xf3, 0xa, 0xff, 0xc1, 0x0, 0x0, 0xaf,
    0xd0, 0x8f, 0xf3, 0x0, 0x0, 0x1, 0xff, 0x15,
    0xff, 0x10, 0x0, 0x0, 0xf, 0xf2, 0xf, 0xf4,
    0x0, 0x0, 0x2, 0xff, 0x0, 0x7f, 0xe2, 0x0,
    0x1, 0xcf, 0xa0, 0x0, 0xaf, 0xfc, 0xab, 0xff,
    0xd1, 0x0, 0x0, 0x6d, 0xff, 0xfe, 0x80, 0x0,
    0x0, 0x0, 0x0, 0x21, 0x0, 0x0, 0x0,

    /* U+37 "7" */
    0x36, 0x66, 0x66, 0x66, 0x66, 0x66, 0x8, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xf1, 0x8f, 0xc8, 0x88,
    0x88, 0x8c, 0xfd, 0x8, 0xf9, 0x0, 0x0, 0x0,
    0xdf, 0x60, 0x8f, 0x90, 0x0, 0x0, 0x4f, 0xe0,
    0x2, 0x42, 0x0, 0x0, 0xb, 0xf8, 0x0, 0x0,
    0x0, 0x0, 0x3, 0xff, 0x10, 0x0, 0x0, 0x0,
    0x0, 0xaf, 0xa0, 0x0, 0x0, 0x0, 0x0, 0x1f,
    0xf3, 0x0, 0x0, 0x0, 0x0, 0x8, 0xfb, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xff, 0x40, 0x0, 0x0,
    0x0, 0x0, 0x7f, 0xd0, 0x0, 0x0, 0x0, 0x0,
    0xe, 0xf6, 0x0, 0x0, 0x0, 0x0, 0x5, 0xfe,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xcf, 0x80, 0x0,
    0x0, 0x0, 0x0, 0x4f, 0xf1, 0x0, 0x0, 0x0,

    /* U+38 "8" */
    0x0, 0x1, 0x68, 0x87, 0x40, 0x0, 0x0, 0x9,
    0xff, 0xff, 0xff, 0xd4, 0x0, 0xa, 0xff, 0x84,
    0x36, 0xcf, 0xf2, 0x2, 0xff, 0x40, 0x0, 0x0,
    0xbf, 0xa0, 0x4f, 0xe0, 0x0, 0x0, 0x6, 0xfc,
    0x2, 0xff, 0x10, 0x0, 0x0, 0x8f, 0xb0, 0xc,
    0xfc, 0x20, 0x0, 0x6f, 0xf4, 0x0, 0x1b, 0xff,
    0xee, 0xff, 0xf5, 0x0, 0x4, 0xdf, 0xfe, 0xdf,
    0xff, 0x90, 0x3, 0xff, 0x81, 0x0, 0x4, 0xdf,
    0xb0, 0xaf, 0x90, 0x0, 0x0, 0x1, 0xff, 0x2d,
    0xf5, 0x0, 0x0, 0x0, 0xd, 0xf5, 0xbf, 0x80,
    0x0, 0x0, 0x0, 0xff, 0x36, 0xff, 0x50, 0x0,
    0x1, 0xbf, 0xe0, 0xa, 0xff, 0xdb, 0xac, 0xff,
    0xf3, 0x0, 0x5, 0xcf, 0xff, 0xfe, 0x91, 0x0,
    0x0, 0x0, 0x1, 0x21, 0x0, 0x0, 0x0,

    /* U+39 "9" */
    0x0, 0x2, 0x78, 0x85, 0x10, 0x0, 0x0, 0x1a,
    0xff, 0xff, 0xff, 0x70, 0x0, 0xc, 0xfe, 0x74,
    0x48, 0xff, 0x80, 0x5, 0xfe, 0x10, 0x0, 0x2,
    0xff, 0x30, 0x9f, 0x90, 0x0, 0x0, 0x9, 0xfa,
    0xa, 0xf8, 0x0, 0x0, 0x0, 0x8f, 0xe0, 0x8f,
    0xc0, 0x0, 0x0, 0xd, 0xff, 0x12, 0xff, 0x91,
    0x0, 0x2b, 0xff, 0xf2, 0x6, 0xff, 0xfe, 0xef,
    0xf7, 0xff, 0x20, 0x2, 0x9d, 0xed, 0xa3, 0x1f,
    0xf1, 0x0, 0x0, 0x0, 0x0, 0x3, 0xff, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x8f, 0xa0, 0x0, 0x0,
    0x0, 0x0, 0x2f, 0xf4, 0x0, 0x13, 0x0, 0x0,
    0x5e, 0xf9, 0x0, 0x8, 0xfe, 0xcc, 0xef, 0xfa,
    0x0, 0x0, 0x6d, 0xff, 0xff, 0xb5, 0x0, 0x0,
    0x0, 0x0, 0x21, 0x0, 0x0, 0x0, 0x0
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 205, .box_w = 11, .box_h = 11, .ofs_x = 1, .ofs_y = 2},
    {.bitmap_index = 61, .adv_w = 80, .box_w = 3, .box_h = 7, .ofs_x = 1, .ofs_y = -4},
    {.bitmap_index = 72, .adv_w = 135, .box_w = 7, .box_h = 2, .ofs_x = 1, .ofs_y = 5},
    {.bitmap_index = 79, .adv_w = 80, .box_w = 3, .box_h = 4, .ofs_x = 1, .ofs_y = -1},
    {.bitmap_index = 85, .adv_w = 232, .box_w = 14, .box_h = 17, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 204, .adv_w = 232, .box_w = 7, .box_h = 16, .ofs_x = 4, .ofs_y = 0},
    {.bitmap_index = 260, .adv_w = 232, .box_w = 13, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 364, .adv_w = 232, .box_w = 12, .box_h = 17, .ofs_x = 1, .ofs_y = -1},
    {.bitmap_index = 466, .adv_w = 232, .box_w = 15, .box_h = 16, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 586, .adv_w = 232, .box_w = 12, .box_h = 17, .ofs_x = 1, .ofs_y = -1},
    {.bitmap_index = 688, .adv_w = 232, .box_w = 13, .box_h = 17, .ofs_x = 1, .ofs_y = -1},
    {.bitmap_index = 799, .adv_w = 232, .box_w = 13, .box_h = 16, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 903, .adv_w = 232, .box_w = 13, .box_h = 17, .ofs_x = 1, .ofs_y = -1},
    {.bitmap_index = 1014, .adv_w = 232, .box_w = 13, .box_h = 17, .ofs_x = 1, .ofs_y = -1}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/

static const uint8_t glyph_id_ofs_list_0[] = {
    0, 1, 2, 3, 0, 4, 5, 6,
    7, 8, 9, 10, 11, 12, 13
};

/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps[] =
{
    {
        .range_start = 43, .range_length = 15, .glyph_id_start = 1,
        .unicode_list = NULL, .glyph_id_ofs_list = glyph_id_ofs_list_0, .list_length = 15, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_FULL
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

/*Store all the custom data of the font*/
static lv_font_fmt_txt_dsc_t font_dsc = {
    .glyph_bitmap = gylph_bitmap,
    .glyph_dsc = glyph_dsc,
    .cmaps = cmaps,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 1,
    .bpp = 4,
    .kern_classes = 0,
    .bitmap_format = 0
};


/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
lv_font_t font_montserrat_numeric_20 = {
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 20,          /*The maximum line height required by the font*/
    .base_line = 4,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_NONE,
#endif
#if LV_VERSION_CHECK(7, 4, 0)
    .underline_position = -2,
    .underline_thickness = 1,
#endif
    .dsc = &font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
};



#endif /*#if FONT_MONTSERRAT_NUMERIC_20*/

